import cocotb
import os
from pathlib import Path
from cocotb.runner import get_runner
from cocotb.triggers import Timer
import pickle

async def save_results(ret_val):
    proj_path = Path(__file__).resolve().parent
    if not os.path.isdir(proj_path.joinpath('results')):
        os.mkdir(proj_path.joinpath('results'))

    with open(proj_path.joinpath('results').joinpath('results.pickle'), 'wb') as handle:
        pickle.dump(ret_val, handle, protocol=pickle.HIGHEST_PROTOCOL)

# Start a testcase
@cocotb.test()
def tb_test(dut):
{% for arg in in_args %}
    dut.{{ arg[0] }}.value = {{ arg[1] }}
{% endfor %}
    yield Timer(1)
    return_val = int(dut.a.value)
    print("FIFO Dout Value=", return_val)
    yield save_results(str(return_val))